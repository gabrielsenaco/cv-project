{"version":3,"sources":["components/InputLabel.js","components/SectionItem.js","components/Button.js","components/FailSection.js","components/Section.js","components/ParentSection.js","objects/ObjectBuilder.js","objects/SectionItemObjects.js","objects/SectionButtonObjects.js","objects/ValidatorObjects.js","sections/GeneralInformation.js","sections/EducationalExperience.js","sections/PracticalExperience.js","sections/DownloadCV.js","components/Header.js","components/Footer.js","objects/ValidatorManipulation.js","objects/PDFGenerator.js","App.js","index.js"],"names":["InputLabel","props","input","value","type","placeholder","id","icon","changeHandler","title","inputID","toLowerCase","concat","failed","toString","name","defaultValue","onChange","className","htmlFor","SectionItem","length","Button","text","color","bgColor","clickHandler","onClick","getButtonComponent","buttonObj","FailSection","fails","map","fail","index","uniqid","Section","editor","submitHandler","items","buttons","item","inputObj","previewValue","replaceAll","getSectionItemComponent","editorState","filter","button","onlyView","onlyEditor","filterButtonsByEditorState","onSubmit","noValidate","ParentSection","sections","section","getSectionComponent","createItemObject","sectionID","parentSectionID","defaultChangeHandler","bindEventHandler","createButtonObject","defaultClickHandler","createSectionObject","firstBind","defaultSubmitHandler","createParentSectionObject","validators","sectionModel","handler","bind","createValidatorObject","validatorCallback","validate","createValidatorItemObject","valid","savePreviewValuesItems","createItemName","changeInputHandler","IconSignature","createItemEmail","IconAt","createItemPhoneNumber","IconPhone","createItemSchoolName","IconSchool","createItemTitleOfStudy","IconCertificate","createItemDateOfStudy","IconCalendar","createItemCompanyName","IconBuildingSkyscraper","createItemPositionTitle","IconBriefcase","createItemMainTasks","IconSubtask","createItemDateStartedJob","createItemDateStoppedJob","createSaveButton","IconCheck","createEditButton","toggleEditorHandler","IconEdit","createCloseEditorButton","IconX","createDeleteSectionButton","deleteSectionHandler","IconTrash","createExpandParentSectionButton","expandParentSectionHandler","IconPlus","createSaveAsPDFParentSectionButton","saveAsPDFParentSectionHandler","IconDeviceFloppy","getEmptyValueValidatorText","nameValidator","empty","emailRegEx","emailValidator","match","phoneNumberValidator","Number","isInteger","parseInt","schoolNameValidator","titleOfStudyValidator","dateOfStudyValidator","companyNameValidator","positionTitleValidator","mainTasksValidator","dateStartedJobValidator","dateStoppedJobValidator","GeneralInformation","this","getItemsArray","getButtonsArray","parentSection","getValidators","EducationalExperience","getSectionModel","PracticalExperience","Header","Footer","href","rel","target","validateItem","itemValue","validator","isItemFailed","validation","getItemsWithValidations","push","ignoredParentSections","fonts","Roboto","normal","bold","italics","bolditalics","styles","parentSectionTitle","fontSize","margin","sectionTitle","sectionItemTitle","sectionItemValue","PDFCurriculum","stateObject","parentSections","includes","content","style","pdfMake","createPdf","download","App","initialValue","useState","setValue","ref","useRef","useEffect","current","useStateRef","getData","DownloadCV","setParentSections","parentSectionsRef","updateSections","sectionsCallback","updateItems","itemsCallback","closeAllSectionsEditor","a","_","event","__","newSection","Object","assign","createSectionObjectBySectionModel","editorCallback","updateSectionEditor","currentEditorState","preventDefault","someFails","updatedSections","items2","parentSectionsComponents","values","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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EACAC,EACAoB,GAEA,OAAOtB,EACL,gBACA,OACA,2BACAiC,IACAX,EACArB,EACAC,IAIEgC,EAAwB,SAC5BjC,EACAC,EACAoB,GAEA,OAAOtB,EACL,eACA,OACA,0BACAmC,IACAb,EACArB,EACAC,IAIEkC,EAA0B,SAC9BnC,EACAC,EACAoB,GAEA,OAAOtB,EACL,iBACA,OACA,4BACAqC,IACAf,EACArB,EACAC,IAIEoC,EAAsB,SAC1BrC,EACAC,EACAoB,GAEA,OAAOtB,EACL,aACA,WACA,6BACAuC,IACAjB,EACArB,EACAC,IAIEsC,EAA2B,SAC/BvC,EACAC,EACAoB,GAEA,OAAOtB,EACL,mBACA,OACA,sBACAiC,IACAX,EACArB,EACAC,IAIEuC,EAA2B,SAC/BxC,EACAC,EACAoB,GAEA,OAAOtB,EACL,mBACA,OACA,sBACAiC,IACAX,EACArB,EACAC,ICvKEwC,EAAmB,SAACzC,EAAWC,GACnC,OAAOG,EACL,OACA,SACAsC,IACA,QACA,WACA,GACA,EACA,KACA1C,EACAC,IAIE0C,EAAmB,SAAC3C,EAAWC,EAAiB2C,GACpD,OAAOxC,EACL,OACA,KACAyC,IACA,QACA,QACA,GACA,EACAD,EACA5C,EACAC,IAIE6C,EAA0B,SAC9B9C,EACAC,EACA2C,GAEA,OAAOxC,EACL,QACA,KACA2C,IACA,QACA,QACA,GACA,EACAH,EACA5C,EACAC,IAIE+C,EAA4B,SAChChD,EACAC,EACAgD,GAEA,OAAO7C,EACL,SACA,KACA8C,IACA,QACA,UACA,GACA,EACAD,EACAjD,EACAC,IAIEkD,EAAkC,SACtCnD,EACAC,EACAmD,GAEA,OAAOhD,EACL,MACA,KACAiD,IACA,QACA,WACA,GACA,EACAD,EACApD,EACAC,IAIEqD,EAAqC,SACzCtD,EACAC,EACAsD,GAEA,OAAOnD,EACL,cACA,KACAoD,IACA,QACA,WACA,GACA,EACAD,EACAvD,EACAC,IC3GJ,SAASwD,EAA4BjH,GAAoB,IAAbM,EAAY,uDAAJ,GAClD,IAAKN,GAA0B,IAAjBA,EAAMkB,OAAc,CA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","file":"static/js/main.943519ca.chunk.js","sourcesContent":["const InputLabel = props => {\n  const { value, type, placeholder, id, icon, changeHandler } = props\n  let title = props.title || ''\n  const inputID = (title || '').toLowerCase().concat('-', id)\n  const failed = props.failed !== null ? props.failed.toString() : null\n  let input\n\n  if (type === 'textarea') {\n    input = (\n      <textarea\n        failed={failed}\n        id={inputID}\n        name={title.toLowerCase()}\n        placeholder={placeholder}\n        type={type}\n        defaultValue={value}\n        onChange={changeHandler}\n      ></textarea>\n    )\n  } else {\n    input = (\n      <input\n        failed={failed}\n        id={inputID}\n        name={title.toLowerCase()}\n        placeholder={placeholder}\n        type={type}\n        defaultValue={value}\n        onChange={changeHandler}\n      />\n    )\n  }\n\n  return (\n    <div key={id} className='section-item'>\n      <label htmlFor={inputID}>{title}</label>\n      <div className='section-item-input-container' failed={failed}>\n        {icon && icon({})}\n        {input}\n      </div>\n    </div>\n  )\n}\n\nexport const getInputLabelComponent = (inputObj, failed) => {\n  return (\n    <InputLabel\n      key={inputObj.id}\n      title={inputObj.title}\n      failed={failed}\n      value={inputObj.previewValue}\n      type={inputObj.type}\n      placeholder={inputObj.placeholder}\n      id={inputObj.id}\n      changeHandler={inputObj.changeHandler}\n      icon={inputObj.icon}\n    />\n  )\n}\nexport default InputLabel\n","const SectionItem = props => {\n  const { title, id } = props\n  let value = props.value\n\n  if (!value || value.length === 0) {\n    value = 'Not set yet'\n  }\n\n  return (\n    <div key={id} className='section-item view'>\n      <h5>{title}</h5>\n      <p>{value}</p>\n    </div>\n  )\n}\n\nexport const getSectionItemComponent = item => {\n  let value = item.value\n  if (item.type === 'date') {\n    value = item.value.replaceAll('-', '/')\n  }\n  return (\n    <SectionItem title={item.title} value={value} id={item.id} key={item.id} />\n  )\n}\n\nexport default SectionItem\n","import './../styles/Button.css'\n\nconst Button = props => {\n  const { text, icon, color, bgColor, type, id, clickHandler } = props\n  const className = 'button bg-'.concat(bgColor || 'default', ' ', color || '')\n  return (\n    <button\n      className={className}\n      key={id}\n      type={type || 'button'}\n      onClick={clickHandler}\n    >\n      {icon && icon({})}\n      {text}\n    </button>\n  )\n}\n\nexport const getButtonComponent = buttonObj => {\n  return (\n    <Button\n      key={buttonObj.id}\n      type={buttonObj.type}\n      text={buttonObj.text}\n      icon={buttonObj.icon}\n      id={buttonObj.id}\n      bgColor={buttonObj.bgColor}\n      color={buttonObj.color}\n      clickHandler={buttonObj.clickHandler}\n    />\n  )\n}\n\nexport default Button\n","import uniqid from 'uniqid'\nimport './../styles/FailSection.css'\n\nconst FailSection = props => {\n  let fails = props.fails || []\n  fails = fails.map((fail, index) => {\n    return (\n      <li key={uniqid()} className='fail-item'>\n        {<span className='fail-item-index'>{index + 1 + '. '}</span>}\n        {fail}\n      </li>\n    )\n  })\n\n  if (fails.length === 0) {\n    return null\n  }\n\n  return (\n    <ul className='fail-section'>\n      <h5>Fails list</h5>\n      {fails}\n    </ul>\n  )\n}\n\nexport default FailSection\n","import { getInputLabelComponent } from './InputLabel'\nimport { getSectionItemComponent } from './SectionItem'\nimport { getButtonComponent } from './Button'\nimport FailSection from './FailSection'\nimport './../styles/Section.css'\n\nconst Section = props => {\n  const filterButtonsByEditorState = (buttons, editorState) => {\n    return buttons.filter(button => {\n      if (button.onlyView && editorState) {\n        return false\n      }\n\n      if (button.onlyEditor && !editorState) {\n        return false\n      }\n      return true\n    })\n  }\n\n  const { id, editor, submitHandler, title } = props\n  let { items, buttons, fails } = props\n\n  items = items.map(item => {\n    if (editor) return getInputLabelComponent(item, item.failed)\n    return getSectionItemComponent(item)\n  })\n\n  buttons = filterButtonsByEditorState(buttons, editor)\n  buttons = buttons.map(button => getButtonComponent(button))\n\n  fails = <FailSection fails={fails.map(fail => fail.text)} />\n\n  if (editor) {\n    return (\n      <section key={id} className='section'>\n        {title && <h4>{title}</h4>}\n        <form onSubmit={submitHandler} className='section-editor' noValidate>\n          <div className='section-items'>{items}</div>\n          {fails}\n          {buttons}\n        </form>\n      </section>\n    )\n  }\n  return (\n    <section key={id} className='section'>\n      {title && <h4>{title}</h4>}\n      <div className='section-items'>{items}</div>\n      {buttons}\n    </section>\n  )\n}\n\nexport default Section\n","import Section from './Section'\nimport { getButtonComponent } from './Button'\nimport './../styles/ParentSection.css'\n\nconst ParentSection = props => {\n  const getSectionComponent = section => {\n    return (\n      <Section\n        key={section.id}\n        submitHandler={section.submitHandler}\n        items={section.items}\n        buttons={section.buttons}\n        fails={section.fails}\n        editor={section.editor}\n        id={section.id}\n        title={section.title}\n      />\n    )\n  }\n\n  let sections = props.sections || []\n  let buttons = props.buttons || []\n\n  sections = sections.map(section => {\n    return getSectionComponent(section)\n  })\n\n  buttons = buttons.map(button => {\n    return getButtonComponent(button)\n  })\n\n  return (\n    <article\n      className={'parent-section '.concat(props.className || '')}\n      key={props.id}\n    >\n      <h3>{props.title}</h3>\n      {sections}\n      {buttons}\n    </article>\n  )\n}\n\nexport default ParentSection\n","import uniqid from 'uniqid'\n\nconst createItemObject = (\n  title,\n  type,\n  placeholder,\n  icon,\n  changeHandler,\n  sectionID,\n  parentSectionID,\n  id = uniqid()\n) => {\n  const defaultChangeHandler = changeHandler\n\n  if (changeHandler) {\n    changeHandler = bindEventHandler(\n      changeHandler,\n      id,\n      sectionID,\n      parentSectionID\n    )\n  }\n\n  return {\n    title,\n    type,\n    placeholder,\n    changeHandler,\n    icon,\n    previewValue: '',\n    value: '',\n    failed: null,\n    id,\n    defaultChangeHandler\n  }\n}\n\nconst createButtonObject = (\n  text,\n  type,\n  icon,\n  color,\n  bgColor,\n  onlyView,\n  onlyEditor,\n  clickHandler,\n  sectionID,\n  parentSectionID,\n  id = uniqid()\n) => {\n  const defaultClickHandler = clickHandler\n  if (clickHandler) {\n    clickHandler = bindEventHandler(\n      clickHandler,\n      null,\n      sectionID,\n      parentSectionID\n    )\n  }\n\n  return {\n    text,\n    type,\n    icon,\n    color,\n    bgColor,\n    onlyView,\n    onlyEditor,\n    clickHandler,\n    defaultClickHandler,\n    id\n  }\n}\n\nconst createFailObject = (id, fail) => {\n  return {\n    id,\n    fail\n  }\n}\n\nconst createSectionObject = (\n  title,\n  items,\n  buttons,\n  editor,\n  submitHandler,\n  firstBind,\n  parentSectionID,\n  id = uniqid()\n) => {\n  const defaultSubmitHandler = submitHandler\n  if (submitHandler && firstBind) {\n    submitHandler = bindEventHandler(submitHandler, null, id, parentSectionID)\n  }\n  return {\n    title,\n    items,\n    buttons,\n    editor,\n    fails: [],\n    id,\n    submitHandler,\n    defaultSubmitHandler\n  }\n}\n\nconst createParentSectionObject = (\n  title,\n  sections,\n  validators,\n  sectionModel,\n  buttons,\n  className,\n  id = uniqid()\n) => {\n  return {\n    title,\n    sections,\n    sectionModel,\n    validators,\n    buttons,\n    id,\n    className\n  }\n}\n\nfunction bindEventHandler (handler, id, sectionID, parentSectionID) {\n  if (handler) {\n    return handler.bind(null, id, sectionID, parentSectionID)\n  }\n}\n\nconst createSectionObjectBySectionModel = (\n  sectionModel,\n  parentSectionID,\n  sectionID = uniqid()\n) => {\n  let section = Object.assign({}, sectionModel)\n\n  const items = section.items.map(item => {\n    const id = uniqid()\n    let changeHandler = bindEventHandler(\n      item.defaultChangeHandler,\n      id,\n      sectionID,\n      parentSectionID\n    )\n    return {\n      ...item,\n      id,\n      changeHandler\n    }\n  })\n\n  const buttons = section.buttons.map(button => {\n    const id = uniqid()\n    let clickHandler = bindEventHandler(\n      button.defaultClickHandler,\n      null,\n      sectionID,\n      parentSectionID\n    )\n\n    return {\n      ...button,\n      clickHandler,\n      id\n    }\n  })\n\n  let submitHandler = bindEventHandler(\n    section.defaultSubmitHandler,\n    null,\n    sectionID,\n    parentSectionID\n  )\n\n  return {\n    ...section,\n    id: sectionID,\n    items,\n    buttons,\n    submitHandler\n  }\n}\n\nconst createValidatorObject = (title, type, validatorCallback) => {\n  return {\n    title,\n    type,\n    validate: validatorCallback\n  }\n}\n\nconst createValidatorItemObject = (valid, text = '') => {\n  return {\n    valid,\n    text\n  }\n}\n\nfunction savePreviewValuesItems (items) {\n  return items.map(item => {\n    let value = item.previewValue\n    return {\n      ...item,\n      value\n    }\n  })\n}\n\nexport {\n  createItemObject,\n  createButtonObject,\n  createParentSectionObject,\n  createSectionObject,\n  createFailObject,\n  createValidatorObject,\n  createValidatorItemObject,\n  createSectionObjectBySectionModel,\n  savePreviewValuesItems\n}\n","import {\n  IconSignature,\n  IconAt,\n  IconPhone,\n  IconSchool,\n  IconCertificate,\n  IconCalendar,\n  IconBuildingSkyscraper,\n  IconBriefcase,\n  IconSubtask\n} from '@tabler/icons'\nimport { createItemObject } from './ObjectBuilder'\n\nconst createItemName = (sectionID, parentSectionID, changeInputHandler) => {\n  return createItemObject(\n    'Name',\n    'text',\n    'Enter your name here',\n    IconSignature,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemEmail = (sectionID, parentSectionID, changeInputHandler) => {\n  return createItemObject(\n    'Email',\n    'email',\n    'Enter your email here',\n    IconAt,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemPhoneNumber = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Phone number',\n    'number',\n    'Enter your phone number here',\n    IconPhone,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemSchoolName = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'School name',\n    'text',\n    'Enter school name here',\n    IconSchool,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemTitleOfStudy = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Title of study',\n    'text',\n    'Enter title of study here',\n    IconCertificate,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemDateOfStudy = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Date of study',\n    'date',\n    'Enter date of study here',\n    IconCalendar,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemCompanyName = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Company name',\n    'text',\n    'Enter company name here',\n    IconBuildingSkyscraper,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemPositionTitle = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Position title',\n    'text',\n    'Enter position title here',\n    IconBriefcase,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemMainTasks = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Main tasks',\n    'textarea',\n    'Enter your main tasks here',\n    IconSubtask,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemDateStartedJob = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Date you started',\n    'date',\n    'Enter the date here',\n    IconCalendar,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createItemDateStoppedJob = (\n  sectionID,\n  parentSectionID,\n  changeInputHandler\n) => {\n  return createItemObject(\n    'Date you stopped',\n    'date',\n    'Enter the date here',\n    IconCalendar,\n    changeInputHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nexport {\n  createItemPhoneNumber,\n  createItemEmail,\n  createItemName,\n  createItemDateOfStudy,\n  createItemTitleOfStudy,\n  createItemSchoolName,\n  createItemDateStoppedJob,\n  createItemDateStartedJob,\n  createItemMainTasks,\n  createItemPositionTitle,\n  createItemCompanyName\n}\n","import {\n  IconCheck,\n  IconEdit,\n  IconX,\n  IconTrash,\n  IconPlus,\n  IconDeviceFloppy\n} from '@tabler/icons'\nimport { createButtonObject } from './ObjectBuilder'\n\nconst createSaveButton = (sectionID, parentSectionID) => {\n  return createButtonObject(\n    'Save',\n    'submit',\n    IconCheck,\n    'black',\n    'success',\n    false,\n    true,\n    null,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createEditButton = (sectionID, parentSectionID, toggleEditorHandler) => {\n  return createButtonObject(\n    'Edit',\n    null,\n    IconEdit,\n    'black',\n    'info',\n    true,\n    false,\n    toggleEditorHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createCloseEditorButton = (\n  sectionID,\n  parentSectionID,\n  toggleEditorHandler\n) => {\n  return createButtonObject(\n    'Close',\n    null,\n    IconX,\n    'black',\n    'info',\n    false,\n    true,\n    toggleEditorHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createDeleteSectionButton = (\n  sectionID,\n  parentSectionID,\n  deleteSectionHandler\n) => {\n  return createButtonObject(\n    'Delete',\n    null,\n    IconTrash,\n    'black',\n    'danger',\n    false,\n    false,\n    deleteSectionHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createExpandParentSectionButton = (\n  sectionID,\n  parentSectionID,\n  expandParentSectionHandler\n) => {\n  return createButtonObject(\n    'Add',\n    null,\n    IconPlus,\n    'black',\n    'success',\n    false,\n    false,\n    expandParentSectionHandler,\n    sectionID,\n    parentSectionID\n  )\n}\n\nconst createSaveAsPDFParentSectionButton = (\n  sectionID,\n  parentSectionID,\n  saveAsPDFParentSectionHandler\n) => {\n  return createButtonObject(\n    'Save as PDF',\n    null,\n    IconDeviceFloppy,\n    'black',\n    'success',\n    false,\n    false,\n    saveAsPDFParentSectionHandler,\n    sectionID,\n    parentSectionID\n  )\n}\nexport {\n  createSaveAsPDFParentSectionButton,\n  createSaveButton,\n  createEditButton,\n  createCloseEditorButton,\n  createDeleteSectionButton,\n  createExpandParentSectionButton\n}\n","import {\n  createValidatorObject,\n  createValidatorItemObject\n} from './ObjectBuilder'\n\nfunction getEmptyValueValidatorText (value, title = '') {\n  if (!value || value.length === 0) {\n    let text = title.length > 0 ? title + ': ' : ''\n    text += 'Value cannot be empty'\n    return text\n  }\n}\n\nconst nameValidator = (() => {\n  return createValidatorObject('name', 'text', value => {\n    const empty = getEmptyValueValidatorText(value, 'Name')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\n// Thank you Tikhonov from regex101 for this email regex\nconst emailRegEx = /^([a-z0-9]+(?:[._-][a-z0-9]+)*)@([a-z0-9]+(?:[.-][a-z0-9]+)*\\.[a-z]{2,})$/\n\nconst emailValidator = (() => {\n  return createValidatorObject('email', 'email', value => {\n    const empty = getEmptyValueValidatorText(value, 'Email')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    if (!value.match(emailRegEx)) {\n      return createValidatorItemObject(\n        false,\n        'Email: Enter valid email address'\n      )\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst phoneNumberValidator = (() => {\n  return createValidatorObject('phone number', 'number', value => {\n    const empty = getEmptyValueValidatorText(value, 'Phone number')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    if (!Number.isInteger(parseInt(value))) {\n      return createValidatorItemObject(\n        false,\n        'Phone number: Enter valid phone number(insert only numbers)'\n      )\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst schoolNameValidator = (() => {\n  return createValidatorObject('school name', 'text', value => {\n    const empty = getEmptyValueValidatorText(value, 'School name')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst titleOfStudyValidator = (() => {\n  return createValidatorObject('title of study', 'text', value => {\n    const empty = getEmptyValueValidatorText(value, 'Title of study')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst dateOfStudyValidator = (() => {\n  return createValidatorObject('date of study', 'date', value => {\n    const empty = getEmptyValueValidatorText(value, 'Date of study')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    if (!value.match(/\\d{4}-\\d{2}-\\w{2}/)) {\n      return createValidatorItemObject(\n        false,\n        'Date of study: Insert valid date. Pattern: yyyy-mm-dd'\n      )\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst companyNameValidator = (() => {\n  return createValidatorObject('company name', 'text', value => {\n    const empty = getEmptyValueValidatorText(value, 'Company name')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst positionTitleValidator = (() => {\n  return createValidatorObject('position title', 'text', value => {\n    const empty = getEmptyValueValidatorText(value, 'Position title')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst mainTasksValidator = (() => {\n  return createValidatorObject('Main tasks', 'textarea', value => {\n    const empty = getEmptyValueValidatorText(value, 'Main tasks')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst dateStartedJobValidator = (() => {\n  return createValidatorObject('date you started', 'date', value => {\n    const empty = getEmptyValueValidatorText(value, 'Date you started')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    if (!value.match(/\\d{4}-\\d{2}-\\w{2}/)) {\n      return createValidatorItemObject(\n        false,\n        'Date you started: Insert valid date. Pattern: yyyy-mm-dd'\n      )\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nconst dateStoppedJobValidator = (() => {\n  return createValidatorObject('date you stopped', 'date', value => {\n    const empty = getEmptyValueValidatorText(value, 'Date you stopped')\n    if (empty) {\n      return createValidatorItemObject(false, empty)\n    }\n\n    if (!value.match(/\\d{4}-\\d{2}-\\w{2}/)) {\n      return createValidatorItemObject(\n        false,\n        'Date you stopped: Insert valid date. Pattern: yyyy-mm-dd'\n      )\n    }\n\n    return createValidatorItemObject(true)\n  })\n})()\n\nexport {\n  nameValidator,\n  emailValidator,\n  phoneNumberValidator,\n  titleOfStudyValidator,\n  schoolNameValidator,\n  dateOfStudyValidator,\n  companyNameValidator,\n  dateStoppedJobValidator,\n  dateStartedJobValidator,\n  mainTasksValidator,\n  positionTitleValidator\n}\n","import uniqid from 'uniqid'\nimport {\n  createParentSectionObject,\n  createSectionObject\n} from './../objects/ObjectBuilder'\n\nimport {\n  createItemPhoneNumber,\n  createItemEmail,\n  createItemName\n} from './../objects/SectionItemObjects'\n\nimport {\n  createSaveButton,\n  createEditButton\n} from './../objects/SectionButtonObjects'\n\nimport {\n  nameValidator,\n  emailValidator,\n  phoneNumberValidator\n} from './../objects/ValidatorObjects'\n\nexport default class GeneralInformation {\n  constructor (changeInputHandler, toggleEditorHandler, submitHandler) {\n    this.changeInputHandler = changeInputHandler\n    this.toggleEditorHandler = toggleEditorHandler\n    this.sectionID = uniqid()\n    this.parentSectionID = uniqid()\n    this.items = this.getItemsArray(this.sectionID, this.parentSectionID)\n    this.buttons = this.getButtonsArray(this.sectionID, this.parentSectionID)\n\n    this.section = createSectionObject(\n      null,\n      this.items,\n      this.buttons,\n      true,\n      submitHandler,\n      true,\n      this.parentSectionID,\n      this.sectionID\n    )\n\n    this.parentSection = createParentSectionObject(\n      'General Information',\n      [this.section],\n      this.getValidators(),\n      null,\n      [],\n      null,\n      this.parentSectionID\n    )\n  }\n\n  getData () {\n    return this.parentSection\n  }\n\n  getItemsArray (sectionID, parentSectionID) {\n    return [\n      createItemName(sectionID, parentSectionID, this.changeInputHandler),\n      createItemEmail(sectionID, parentSectionID, this.changeInputHandler),\n      createItemPhoneNumber(sectionID, parentSectionID, this.changeInputHandler)\n    ]\n  }\n\n  getButtonsArray (sectionID, parentSectionID) {\n    return [\n      createSaveButton(sectionID, parentSectionID),\n      createEditButton(sectionID, parentSectionID, this.toggleEditorHandler)\n    ]\n  }\n\n  getValidators () {\n    return [nameValidator, emailValidator, phoneNumberValidator]\n  }\n}\n","import uniqid from 'uniqid'\nimport {\n  createParentSectionObject,\n  createSectionObject\n} from './../objects/ObjectBuilder'\n\nimport {\n  createItemDateOfStudy,\n  createItemTitleOfStudy,\n  createItemSchoolName\n} from './../objects/SectionItemObjects'\n\nimport {\n  createSaveButton,\n  createEditButton,\n  createCloseEditorButton,\n  createDeleteSectionButton,\n  createExpandParentSectionButton\n} from './../objects/SectionButtonObjects'\n\nimport {\n  titleOfStudyValidator,\n  schoolNameValidator,\n  dateOfStudyValidator\n} from './../objects/ValidatorObjects'\n\nexport default class EducationalExperience {\n  constructor (\n    changeInputHandler,\n    toggleEditorHandler,\n    submitHandler,\n    expandParentSectionHandler,\n    deleteSectionHandler\n  ) {\n    this.changeInputHandler = changeInputHandler\n    this.toggleEditorHandler = toggleEditorHandler\n    this.deleteSectionHandler = deleteSectionHandler\n    this.parentSectionID = uniqid()\n    this.buttons = [\n      createExpandParentSectionButton(\n        null,\n        this.parentSectionID,\n        expandParentSectionHandler\n      )\n    ]\n    this.parentSection = createParentSectionObject(\n      'Educational Experience',\n      [],\n      this.getValidators(),\n      this.getSectionModel(submitHandler),\n      this.buttons,\n      null,\n      this.parentSectionID\n    )\n  }\n\n  getSectionModel (submitHandler) {\n    let sectionID = uniqid()\n    let items = this.getItemsArray(sectionID, this.parentSectionID)\n    let buttons = this.getButtonsArray(sectionID, this.parentSectionID)\n\n    return createSectionObject(\n      'Educational Experience',\n      items,\n      buttons,\n      true,\n      submitHandler,\n      true,\n      this.parentSectionID,\n      sectionID\n    )\n  }\n\n  getData () {\n    return this.parentSection\n  }\n\n  getItemsArray (sectionID, parentSectionID) {\n    return [\n      createItemSchoolName(sectionID, parentSectionID, this.changeInputHandler),\n      createItemTitleOfStudy(\n        sectionID,\n        parentSectionID,\n        this.changeInputHandler\n      ),\n      createItemDateOfStudy(sectionID, parentSectionID, this.changeInputHandler)\n    ]\n  }\n\n  getButtonsArray (sectionID, parentSectionID) {\n    return [\n      createSaveButton(sectionID, parentSectionID),\n      createEditButton(sectionID, parentSectionID, this.toggleEditorHandler),\n      createCloseEditorButton(\n        sectionID,\n        parentSectionID,\n        this.toggleEditorHandler\n      ),\n      createDeleteSectionButton(\n        sectionID,\n        parentSectionID,\n        this.deleteSectionHandler\n      )\n    ]\n  }\n\n  getValidators () {\n    return [titleOfStudyValidator, schoolNameValidator, dateOfStudyValidator]\n  }\n}\n","import uniqid from 'uniqid'\nimport {\n  createParentSectionObject,\n  createSectionObject\n} from './../objects/ObjectBuilder'\n\nimport {\n  createItemDateStoppedJob,\n  createItemDateStartedJob,\n  createItemMainTasks,\n  createItemPositionTitle,\n  createItemCompanyName\n} from './../objects/SectionItemObjects'\n\nimport {\n  createSaveButton,\n  createEditButton,\n  createCloseEditorButton,\n  createDeleteSectionButton,\n  createExpandParentSectionButton\n} from './../objects/SectionButtonObjects'\n\nimport {\n  companyNameValidator,\n  dateStoppedJobValidator,\n  dateStartedJobValidator,\n  mainTasksValidator,\n  positionTitleValidator\n} from './../objects/ValidatorObjects'\n\nexport default class PracticalExperience {\n  constructor (\n    changeInputHandler,\n    toggleEditorHandler,\n    submitHandler,\n    expandParentSectionHandler,\n    deleteSectionHandler\n  ) {\n    this.changeInputHandler = changeInputHandler\n    this.toggleEditorHandler = toggleEditorHandler\n    this.deleteSectionHandler = deleteSectionHandler\n    this.parentSectionID = uniqid()\n    this.buttons = [\n      createExpandParentSectionButton(\n        null,\n        this.parentSectionID,\n        expandParentSectionHandler\n      )\n    ]\n    this.parentSection = createParentSectionObject(\n      'Practical Experience',\n      [],\n      this.getValidators(),\n      this.getSectionModel(submitHandler),\n      this.buttons,\n      null,\n      this.parentSectionID\n    )\n  }\n\n  getSectionModel (submitHandler) {\n    let sectionID = uniqid()\n    let items = this.getItemsArray(sectionID, this.parentSectionID)\n    let buttons = this.getButtonsArray(sectionID, this.parentSectionID)\n\n    return createSectionObject(\n      'Practical Experience',\n      items,\n      buttons,\n      true,\n      submitHandler,\n      true,\n      this.parentSectionID,\n      sectionID\n    )\n  }\n\n  getData () {\n    return this.parentSection\n  }\n\n  getItemsArray (sectionID, parentSectionID) {\n    return [\n      createItemCompanyName(\n        sectionID,\n        parentSectionID,\n        this.changeInputHandler\n      ),\n      createItemPositionTitle(\n        sectionID,\n        parentSectionID,\n        this.changeInputHandler\n      ),\n      createItemMainTasks(sectionID, parentSectionID, this.changeInputHandler),\n      createItemDateStartedJob(\n        sectionID,\n        parentSectionID,\n        this.changeInputHandler\n      ),\n      createItemDateStoppedJob(\n        sectionID,\n        parentSectionID,\n        this.changeInputHandler\n      )\n    ]\n  }\n\n  getButtonsArray (sectionID, parentSectionID) {\n    return [\n      createSaveButton(sectionID, parentSectionID),\n      createEditButton(sectionID, parentSectionID, this.toggleEditorHandler),\n      createCloseEditorButton(\n        sectionID,\n        parentSectionID,\n        this.toggleEditorHandler\n      ),\n      createDeleteSectionButton(\n        sectionID,\n        parentSectionID,\n        this.deleteSectionHandler\n      )\n    ]\n  }\n\n  getValidators () {\n    return [\n      companyNameValidator,\n      dateStoppedJobValidator,\n      dateStartedJobValidator,\n      mainTasksValidator,\n      positionTitleValidator\n    ]\n  }\n}\n","import uniqid from 'uniqid'\nimport { createParentSectionObject } from './../objects/ObjectBuilder'\nimport { createSaveAsPDFParentSectionButton } from './../objects/SectionButtonObjects'\n\nexport default class PracticalExperience {\n  constructor (saveAsPDFParentSectionHandler) {\n    this.parentSectionID = uniqid()\n\n    this.buttons = [\n      createSaveAsPDFParentSectionButton(\n        null,\n        this.parentSectionID,\n        saveAsPDFParentSectionHandler\n      )\n    ]\n\n    this.parentSection = createParentSectionObject(\n      'Download CV',\n      [],\n      null,\n      null,\n      this.buttons,\n      'download-cv',\n      this.parentSectionID\n    )\n  }\n\n  getData () {\n    return this.parentSection\n  }\n}\n","import { IconUser } from '@tabler/icons'\nimport './../styles/Header.css'\n\nconst Header = () => {\n  return (\n    <header>\n      <IconUser className='logo' />\n      <div>\n        <h1>CV PROJECT</h1>\n        <p>Build your curriculum and export easy</p>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import { IconBrandGithub } from '@tabler/icons'\nimport './../styles/Footer.css'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <a\n        href='https://github.com/gabesenacom/cv-project'\n        rel='noreferrer'\n        target='_blank'\n      >\n        <IconBrandGithub />\n        See our repository\n      </a>\n    </footer>\n  )\n}\n\nexport default Footer\n","export function validateItem (item, itemValue, validators) {\n  const validator = validators.filter(\n    validator =>\n      validator.title.toLowerCase() === item.title.toLowerCase() &&\n      validator.type.toLowerCase() === item.type.toLowerCase()\n  )[0]\n\n  if (!validator) {\n    return null\n  }\n\n  return validator.validate(itemValue)\n}\n\nexport function isItemFailed (item, itemValue, validators) {\n  let validation = validateItem(item, itemValue.toLowerCase(), validators)\n  return validation ? !validation.valid : null\n}\n\n//object only\nexport function getItemsWithValidations (items, validators) {\n  let fails = []\n\n  items = items.map(item => {\n    let failed = item.failed\n    let value = item.value\n\n    const validation = validateItem(item, item.previewValue, validators)\n\n    if (validation) {\n      if (!validation.valid) {\n        fails.push(validation)\n        failed = true\n      } else {\n        failed = false\n      }\n    }\n\n    return {\n      ...item,\n      failed,\n      value\n    }\n  })\n  return [items, fails]\n}\n","import pdfMake from 'pdfmake'\n\nconst ignoredParentSections = ['Download CV']\n\nconst fonts = {\n  Roboto: {\n    normal:\n      'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Regular.ttf',\n    bold:\n      'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Medium.ttf',\n    italics:\n      'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Italic.ttf',\n    bolditalics:\n      'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-MediumItalic.ttf'\n  }\n}\n\nconst styles = {\n  parentSectionTitle: {\n    fontSize: 28,\n    bold: true,\n    margin: [0, 20, 0, 0]\n  },\n  sectionTitle: {\n    fontSize: 24,\n    bold: true,\n    margin: [20, 5, 0, 0]\n  },\n  sectionItemTitle: {\n    fontSize: 20,\n    bold: true,\n    margin: [25, 5, 0, 0]\n  },\n  sectionItemValue: {\n    fontSize: 16,\n    bold: false,\n    margin: [30, 5, 0, 0]\n  }\n}\n\nconst PDFCurriculum = stateObject => {\n  const parentSections = stateObject.filter(\n    parentSection => !ignoredParentSections.includes(parentSection.title)\n  )\n\n  let content = []\n\n  for (let parentSection of parentSections) {\n    content.push({ text: parentSection.title, style: 'parentSectionTitle' })\n\n    for (let section of parentSection.sections) {\n      if (section.title) {\n        content.push({ text: section.title, style: 'sectionTitle' })\n      }\n\n      for (let item of section.items) {\n        content.push({ text: item.title, style: 'sectionItemTitle' })\n        content.push({ text: item.value, style: 'sectionItemValue' })\n      }\n    }\n  }\n\n  pdfMake.createPdf({ content, styles }, null, fonts).download('curriculum.pdf')\n}\n\nexport default PDFCurriculum\n","import React, { useState, useEffect, useRef } from 'react'\nimport ParentSection from './components/ParentSection'\nimport GeneralInformation from './sections/GeneralInformation'\nimport EducationalExperience from './sections/EducationalExperience'\nimport PracticalExperience from './sections/PracticalExperience'\nimport DownloadCV from './sections/DownloadCV'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport {\n  createSectionObjectBySectionModel,\n  savePreviewValuesItems\n} from './objects/ObjectBuilder'\nimport {\n  isItemFailed,\n  getItemsWithValidations\n} from './objects/ValidatorManipulation'\nimport PDFCurriculum from './objects/PDFGenerator'\n\nfunction useStateRef (initialValue) {\n  const [value, setValue] = useState(initialValue)\n\n  const ref = useRef(value)\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return [value, setValue, ref]\n}\n\nconst App = () => {\n  let [parentSections, setParentSections, parentSectionsRef] = useStateRef([\n    new GeneralInformation(\n      changeInputHandler,\n      toggleEditorHandler,\n      submitHandler\n    ).getData(),\n    new EducationalExperience(\n      changeInputHandler,\n      toggleEditorHandler,\n      submitHandler,\n      expandParentSectionHandler,\n      deleteSectionHandler\n    ).getData(),\n    new PracticalExperience(\n      changeInputHandler,\n      toggleEditorHandler,\n      submitHandler,\n      expandParentSectionHandler,\n      deleteSectionHandler\n    ).getData(),\n    new DownloadCV(saveAsPDFClickHandler).getData()\n  ])\n\n  function updateSections (parentSectionID, sectionsCallback) {\n    setParentSections(parentSections =>\n      parentSections.map(parentSection => {\n        let sections = parentSection.sections\n        if (parentSection.id === parentSectionID) {\n          sections = sectionsCallback(sections, parentSection)\n        }\n\n        return {\n          ...parentSection,\n          sections\n        }\n      })\n    )\n  }\n\n  function updateItems (parentSectionID, sectionID, itemsCallback) {\n    updateSections(parentSectionID, (sections, parentSection) => {\n      return sections.map(section => {\n        let items = section.items\n        if (section.id === sectionID) {\n          items = itemsCallback(items, section, parentSection)\n        }\n        return {\n          ...section,\n          items\n        }\n      })\n    })\n  }\n\n  function updateSectionEditor (parentSectionID, sectionID, editorCallback) {\n    updateSections(parentSectionID, sections => {\n      return sections.map(section => {\n        let editor = section.editor\n        if (section.id === sectionID) {\n          editor = editorCallback(editor)\n        }\n        return {\n          ...section,\n          editor\n        }\n      })\n    })\n  }\n\n  function closeAllSectionsEditor () {\n    setParentSections(parentSections => {\n      parentSections = parentSections.map(parentSection => {\n        let sections = parentSection.sections.map(section => {\n          return {\n            ...section,\n            editor: false\n          }\n        })\n\n        return {\n          ...parentSection,\n          sections\n        }\n      })\n      return parentSections\n    })\n  }\n\n  async function saveAsPDFClickHandler () {\n    closeAllSectionsEditor()\n    PDFCurriculum(parentSectionsRef.current)\n  }\n\n  function deleteSectionHandler (_, sectionID, parentSectionID, event) {\n    updateSections(parentSectionID, (sections, parentSection) => {\n      return sections.filter(section => section.id !== sectionID)\n    })\n  }\n\n  function expandParentSectionHandler (_, __, parentSectionID, event) {\n    updateSections(parentSectionID, (sections, parentSection) => {\n      const newSection = createSectionObjectBySectionModel(\n        parentSection.sectionModel,\n        parentSectionID\n      )\n      return sections.concat(newSection)\n    })\n  }\n\n  function changeInputHandler (id, sectionID, parentSectionID, event) {\n    const value = event.target.value\n    updateItems(parentSectionID, sectionID, (items, section, parentSection) => {\n      return items.map(item => {\n        let previewValue = item.previewValue\n        let failed = item.failed\n        if (item.id === id) {\n          previewValue = value\n          failed = isItemFailed(item, previewValue, parentSection.validators)\n        }\n        return {\n          ...item,\n          previewValue,\n          failed\n        }\n      })\n    })\n  }\n\n  function toggleEditorHandler (_, sectionID, parentSectionID, event) {\n    updateSectionEditor(parentSectionID, sectionID, currentEditorState => {\n      return !currentEditorState\n    })\n\n    updateItems(parentSectionID, sectionID, (items, _, parentSection) => {\n      return items.map(item => {\n        return {\n          ...item,\n          previewValue: item.value,\n          failed: isItemFailed(item, item.value, parentSection.validators)\n        }\n      })\n    })\n  }\n\n  async function submitHandler (_, sectionID, parentSectionID, event) {\n    event.preventDefault()\n    let someFails = false\n    await updateSections(parentSectionID, (sections, parentSection) => {\n      let updatedSections = sections.map(section => {\n        if (section.id !== sectionID) {\n          return section\n        }\n\n        let items = section.items\n\n        let [items2, fails] = getItemsWithValidations(\n          items,\n          parentSection.validators\n        )\n        items = items2\n        someFails = fails.length > 0\n\n        return {\n          ...section,\n          items,\n          fails\n        }\n      })\n\n      if (someFails) {\n        return updatedSections\n      }\n\n      updatedSections = updatedSections.map(section => {\n        if (section.id !== sectionID) {\n          return section\n        }\n\n        let items = section.items\n\n        items = savePreviewValuesItems(items)\n\n        return {\n          ...section,\n          items\n        }\n      })\n\n      return updatedSections\n    })\n\n    if (!someFails) {\n      toggleEditorHandler(null, sectionID, parentSectionID, null)\n    }\n  }\n\n  const parentSectionsComponents = Object.values(parentSections).map(\n    parentSection => {\n      let { id, sections, title, buttons, className } = parentSection\n      return (\n        <ParentSection\n          className={className}\n          key={id}\n          sections={sections}\n          buttons={buttons}\n          id={id}\n          title={title}\n        />\n      )\n    }\n  )\n\n  return (\n    <main>\n      <Header />\n      {parentSectionsComponents}\n      <Footer />\n    </main>\n  )\n}\n\nexport default App\n","import 'reset-css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}